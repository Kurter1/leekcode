749.病毒
思路：
不断重复下面循环，知道没有待隔离的病毒为止
1.广搜确定不同区域的：待感染区域的面积，隔离此区域所需要的隔离墙的数量
2.隔离这个病毒区

用不同的数字代表地图中不同的状态：
0:空地
1:活病毒
2：死病毒（被控制）

然后一个死循环，每次控制一个病毒区域，如果已经没有活病毒了，就退出循环。

while(true) {
  bool has1 = false;
  
  //此处进行病毒隔离操作，同时如果还有活病毒(1)，就把has1标记为true;
  
  if(!has1)
    break;
}

控制活病毒需要几个变量：
int maxladjacent = 0; //活病毒的最大相邻待感染区域的大小
map<int, pair<int, int >>area2loc; //待感染区域的大小，其中一个活病毒的坐标
map<pair<int, int>, int>loc2wallNum; //活病毒的坐标，需要添加墙的数量
vector<vector<bool>>visited(n,vector<bool>(m,false)); //标志哪个区域被遍历过了

遍历方法为：
for(int i=0;i<n;i++)
  for(int j=0;j<m;j++)
    {if(isInfected[i][j]==1&&!visited[i][j])
     {
          has1=true;
          visited[i][j]=true;
          pair<int,int>oneofthisarea = {i,j};
          int thisAdjacent=0; //这个带感染区域的大小
          int thisWallNum=0; //控制这个区域所需要安装的隔离墙的数量
          set<pair<int,int>>counted; //已经统计过的待感染区域
          
          //此处进行BFS，同时记录这片区域的待感染区域的大小，需要安装隔离墙的数量
          
          
          set<pair<int,int>>counted; //已经统计过的待感染区域j逆行
          set<pair<int,int>>counted; //已经统计过的待感染区域
