question1:
小红可以对一个数进行如下两种操作：将这个数乘以x；或将这个数乘以y。操作的次数是没有限制的。
小红想知道，自己最少经过多少次操作以后，可以把a变成b？

输入描述：
四个正整数x,y,a,b,用空格隔开。
2<=x,y<=100
1<=a,b<=10^9

输出描述：
如果小红无论如何都无法把a变成b，则输出-1.
否则输出小红操作的最少次数。可以证明，如果存在某种操作，那么最少次数一定是固定的。

示例1:
输入：
2 3 5 20
输出：
2
说明：
x=2，y=3，进行两次乘2操作，可以把5变成20.

错误思路： 贪心貌似是对的，实际上如果x，y为倍数关系会导致无法整除，因此遇到除不尽的问题应该回退到前一个状态
int main(){
int a,b,x,y;
int count=0;
cin>>a>>b>>x>>y;
if(b%a!=0)
{
  return -1;
}
else
{
  int c= b/a;
}
if(x<y)
{
  swap(x,y);
}
while(c/x!=0)
{
  ++count;
  c/=x;
}
while(c/y!=0)
{
  ++count;
  c/=y;
}
return count;
}
