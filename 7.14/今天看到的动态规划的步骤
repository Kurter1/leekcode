今天看到的一个很有趣的关于动态规划五部曲的描述：
1.确定dp[i]的下标以及dp值的含义：爬到第i层楼梯，有dp[i]种方法：
2.确定动态规划的递推公式：dp[i]=dp[i-1]+dp[i-2];
3.dp数组的初始化：因为提示中1<=n<=45所以初始值，dp[1]=1,dp[2]=2;
4.确定遍历顺序：分析递推公式可知当前值依赖前两个值来确定，所以递推顺序应该是从前往后；
5.打印dp数组看自己写的对不对；

e.x 爬楼梯：
int climbStairs(int n)
{
  if(n<=1) return n; 
  vector<int>dp(n+1);
  dp[1]=1;
  dp[2]=2;
  for(int i = 3;i<=n;i++)
  {
    dp[i]=dp[i-1]+dp[i-2];
  }
    return dp[n];
}
